name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  deployment_pipeline:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "21"
      - name: Install dependencies
        run: npm install
      - name: Make build
        run: npm run build:ui
      - name: Run test database
        run: docker compose -f docker-compose.yml up -d
      - name: Run server tests
        run: npm run test:server
        env:
          NODE_ENV: test
          TEST_DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}

  deploy:
    needs: [deployment_pipeline]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "21"
      - name: Trigger backend deployment
        if: ${{ github.event_name == 'push' && contains(join(github.event.commits.*.message, ', '), '#skip') == false }}
        run: curl ${{ secrets.RENDER_SERVICE_URL }}
      - name: Trigger frontend deployment
        if: ${{ github.event_name == 'push' && contains(join(github.event.commits.*.message, ', '), '#skip') == false }}
        run: curl -X POST -d '{}' ${{ secrets.NETLIFY_SERVICE_URL }}
